[General]
# Log level. Can be one of:
# DEBUG, INFO, WARNING, ERROR, CRITICAL
log_level = INFO

[Actions]
# Lock command to execute. Should NOT fork.
locker = i3lock -n

# Unlock command to execute.
# Not sure how usefull this is but `loginctl unlock-session` is a thing.
unlocker =

# Screen Dimmer command to execute.
# A nice dimmer script is for example:
# https://bitbucket.org/raymonad/xss-lock/src/1e158fb20108058dbd62bd51d8e8c003c0a48717/doc/dim-screen.sh
dimmer = xset dpms force off


[ScreenSaver]
# Action to invoke when the system should be locked.
lock_action = locker

# After how many seconds to activate `lock_action`.
# 0 disables this feature.
lock_sec = 1800

# Action to invoke when system is idle.
# Will be killed if activity has been detected.
idle_action = dimmer

# After how many seconds to activate `idle_action`.
# 0 disables this feature.
idle_sec = 180

# Like `idle_sec` but while `lock_action` is active.
# Only works if the system was locked by this app.
# 0 disables this feature.
idle_sec_locked = 10

# Inhibit the ScreenSaver when the active window is in
# fullscreen mode.
# Only works if the window manager sets the `_NET_WM_STATE_FULLSCREEN`
# atom.
inhibit_on_fullscreen = true

# List of new windows to be ignored. Supports regex matching.
#
# Format:
#   [{"name": "", "class": "", "inst": ""}]
#
# Example:
#   win_ignore = [{"name": "^i3lock$"}, {"class": "^Dunst$"}]
win_ignore = []


[loginctl]
# Action to invoke when logind asks for the session to be locked.
# e.g. `loginctl lock-session`
lock_action = locker

# Action to invoke when logind asks for the session to be unlocked.
# e.g. `loginctl unlock-session`
unlock_action = unlocker

# Activate the Screensaver when `lock_action` was requested.
active_screensaver_on_lock = true


[Sleep]
# Action to invoke before the system goes to sleep.
# Requires systemd and logind to be used.
sleep_action = locker

# Delay sleep by this many seconds.
sleep_delay = 1
